package com.personal.datamining;
import java.util.List;
import java.util.ArrayList;
import java.io.*;

class Main{
    public static void main(String[] args){
        double[] d1 ={6.8968003086311569e-08, 5.5174402469049256e-08, 4.5978668724207715e-08, 3.9410287477892325e-08, 3.1337484099732855e-08, 3.3535487149143657e-08, 2.1980030494108048e-09, 2.1980030494108048e-09, 2.1980030494108048e-09, 2.1980030494108048e-09, 2.1980030494108048e-09, 2.1980030494108048e-09, 0.0, 8.8422577196719693e-10, 1.6673389018657353e-09, 1.6673389018657353e-09, 1.6673389018657353e-09, 1.6673389018657353e-09, 4.0263133779408886e-09, 4.0263133779408886e-09, 5.3889133155848867e-09, 4.6058001856863484e-09, 6.398791179457979e-09, 6.398791179457979e-09, 6.398791179457979e-09, 4.0398167033828258e-09, 4.0398167033828258e-09, 1.7929909937716306e-09, 5.439770697382836e-09, 4.1014711944192021e-09, 6.8625174431957703e-09, 6.8625174431957703e-09, 6.8625174431957703e-09, 6.8625174431957703e-09, 8.1324140120488312e-09, 1.0062876722370464e-08, 1.2714700657414011e-08, 1.1638670820752445e-08, 1.1638670820752445e-08, 1.1638670820752445e-08, 1.1638670820752445e-08, 1.0709469216203208e-08, 5.4449028777777843e-09, 2.3383874519262396e-09, 6.5337103981123942e-10, 1.5727877095932691e-09, 1.8752490671403166e-09, 3.5754460027602265e-09, 5.3601830593156106e-09, 9.138502462694272e-09, 9.8240418339961331e-09, 1.0033031944927425e-08, 9.5852789039341246e-09, 9.282817546387077e-09, 7.5826206107671675e-09, 1.0202845219480546e-08, 1.0725288260690239e-08, 1.0744691517469311e-08, 1.0535701406538019e-08, 1.9423705865939667e-08, 2.35219529409747e-08, 2.9025819256059804e-08, 3.1664098882571475e-08, 3.7733850314200119e-08, 5.7137101145648162e-08, 7.9051299601522787e-08, 8.4021067183113832e-08, 2.150053405155664e-07, 3.6297983583923254e-07, 1.356266373558108e-06, 1.437073359517831e-06, 1.5899641866276172e-06, 1.7823777239213612e-06, 1.9835518821422123e-06, 2.0177013256691567e-06, 2.0796201920842653e-06, 1.3996122607234137e-06, 2.1517232224559687e-06, 2.3300501710922712e-06, 2.5712776088632993e-06, 3.1319537226538941e-06, 3.6346845920322475e-06, 4.3562615610020269e-06, 5.1633827402903477e-06, 5.0928000488527554e-06, 5.3406266091420614e-06, 5.9074982609834999e-06, 6.5594317634674677e-06, 7.2513985246912067e-06, 7.5350470954812665e-06, 7.8123850043100769e-06, 8.6073381219924688e-06, 1.0141637261540382e-05, 1.1204727806151434e-05, 1.1703693465798487e-05, 1.2734029060165345e-05, 1.3793501527256272e-05, 1.4958099488434787e-05, 1.6502354211768632e-05, 1.6554603766800418e-05, 1.853467658260602e-05, 1.9001652804360803e-05, 1.9487678660620335e-05, 1.9719640736834014e-05, 2.0614898565846882e-05, 2.1540811072132525e-05, 2.3893644315161771e-05, 2.4564461804337559e-05, 2.722055341207254e-05, 2.9021540659154456e-05, 3.1777333528485284e-05, 3.4207702908263726e-05, 3.4593865166243631e-05, 3.5773440483158735e-05, 3.6160600647657967e-05, 3.6750005006881891e-05, 3.7502155472728714e-05, 3.6207918490000732e-05, 3.4730932757806196e-05, 3.3154499565820773e-05, 3.0951904083817029e-05, 2.8550220735366694e-05, 2.6190035443716757e-05, 2.3502791790974698e-05, 2.2862759759537509e-05, 2.1645594559670046e-05, 2.2008451454423395e-05, 2.1123234122098567e-05, 2.1571873213182308e-05, 2.1988872183393532e-05, 2.1928247690539138e-05, 2.1641634244165937e-05, 2.1747818217526011e-05, 2.0831678503847278e-05, 2.1240926516595342e-05, 2.1203197878857543e-05, 2.186238721841554e-05, 2.2529366780028276e-05, 2.2984932071169949e-05, 2.3043931873546948e-05, 2.4514892256125415e-05, 2.6017902068734395e-05, 2.8065648493225123e-05, 2.8761414891878951e-05, 2.7725580405249923e-05, 2.7977311355747198e-05, 2.8615834860293683e-05, 2.804563270331073e-05, 2.6257590809970157e-05, 2.4364441167839296e-05, 2.2986799558160393e-05, 2.4458709455237632e-05, 2.3495580273496284e-05, 2.2408827630572758e-05, 2.2952476342652517e-05, 2.3074410872173496e-05, 2.299166278671042e-05, 2.2363268584513207e-05, 2.1821788534128116e-05, 2.2111613627576586e-05, 2.2398048063873182e-05, 2.1629285066231724e-05, 2.1824724784989614e-05, 2.0863167894244074e-05, 2.0605302661838974e-05, 2.0173481587448805e-05, 1.9148903336128698e-05, 1.8241943601131944e-05, 1.798026439660459e-05, 1.7539557467622604e-05, 1.8883326396641159e-05, 1.9045613131295014e-05, 1.907374200576279e-05, 1.9984936857651648e-05, 2.0514769255035909e-05, 2.0631792649185495e-05, 2.0869439513912118e-05, 2.0192692505003966e-05, 2.0264456949803392e-05, 2.0422337688127558e-05, 2.0906586135944444e-05, 2.1326038997975566e-05, 2.1430576000268176e-05, 2.1875429049649548e-05, 2.1615268699244033e-05, 2.1445686550285764e-05, 2.1384441065411662e-05, 2.0766957108873744e-05, 2.0178695314549649e-05, 1.9939207681269571e-05, 1.9378454293165044e-05, 1.956277925988356e-05, 1.9492427194377016e-05, 1.9012679355715329e-05, 1.8984045270136513e-05, 1.9275950644928992e-05, 1.9469676934542285e-05, 1.9622085661451039e-05, 1.958578110361486e-05, 1.9608786369929022e-05, 2.020540415159644e-05};
        double[] d2 = {2.597937642789816e-08, 2.0783501142318528e-08, 1.7319584285265442e-08, 1.4845357958798949e-08, 1.6151866257173101e-08, 1.5454361726848934e-08, 7.9930559948593327e-09, 8.5143468148934125e-09, 8.5143468148934125e-09, 8.5143468148934125e-09, 9.5018795371564528e-09, 7.0252807381012064e-09, 3.7282761639849986e-09, 3.7282761639849986e-09, 2.6187561960203507e-09, 3.3175056987236726e-09, 3.3175056987236726e-09, 2.9476595133002904e-09, 2.0995491694415187e-09, 2.0995491694415187e-09, 2.0995491694415187e-09, 1.3164360395429802e-09, 1.5141820495858026e-09, 2.1002411238717808e-09, 1.4825545870321223e-09, 2.0045426588463246e-09, 6.3804612069974712e-09, 6.7977101090934059e-09, 2.0017286209547284e-08, 2.1394248150841122e-08, 2.0808189076555143e-08, 2.1282193372686364e-08, 2.0760205300872162e-08, 1.7164965068364576e-08, 1.7171015022552997e-08, 5.5449367002730861e-09, 3.2714792462331032e-09, 3.2714792462331032e-09, 3.5352089509745254e-09, 3.945251014769724e-09, 4.2250427918182658e-09, 4.4831338641415641e-09, 1.0706538005373593e-08, 1.2260865148558001e-08, 1.2260865148558001e-08, 1.1829603360372483e-08, 1.3234329441859568e-08, 2.0958210246644982e-08, 2.2402252338896541e-08, 1.6630848158933579e-08, 3.0843925921278781e-08, 3.5441708393487859e-08, 4.2446022442886385e-08, 4.2821020285188638e-08, 4.10728563858344e-08, 5.6348165276633363e-08, 6.5472044452619116e-08, 6.568333930724788e-08, 8.6375978020874245e-08, 9.0944770603229586e-08, 1.1402752900632354e-07, 1.353797038282169e-07, 1.2706688469675343e-07, 1.4794707560637577e-07, 1.6695112460750142e-07, 1.8235850106153505e-07, 2.0579074463559062e-07, 2.3777863455975989e-07, 3.0193619490351662e-07, 3.3898652012404847e-07, 3.4485400452715407e-07, 3.8189808801040008e-07, 4.0154930022343447e-07, 4.6164161750437772e-07, 4.7455577207549435e-07, 4.68486503812926e-07, 5.5681260757722839e-07, 6.3256584453037187e-07, 7.5529777327736683e-07, 8.649629203359512e-07, 9.8057399914150024e-07, 1.0834537615015248e-06, 1.214804448527015e-06, 1.3200309523548574e-06, 1.3447878006088232e-06, 1.3751151024215297e-06, 1.3690785810435304e-06, 1.3281157283781146e-06, 1.4581755338432297e-06, 1.6041847454216298e-06, 1.6791874664079387e-06, 2.0533603008386436e-06, 2.3871666213283656e-06, 2.8422377563889057e-06, 3.1536782440103446e-06, 3.4375718464778918e-06, 3.5539749246384289e-06, 3.835186138953109e-06, 4.0938094108306748e-06, 4.0436756713851148e-06, 4.0906047575260478e-06, 4.1231110685657768e-06, 4.4587056119585867e-06, 5.0017149695642208e-06, 5.4827516911310729e-06, 5.6182900972804154e-06, 5.9469043338010256e-06, 6.2510048662391331e-06, 6.6887063334369098e-06, 6.8574541915365576e-06, 7.0009074590871023e-06, 7.5671152777496379e-06, 7.9634916850019561e-06, 8.5047218923201796e-06, 8.9630554173579317e-06, 9.1914957189536455e-06, 9.2352206511999876e-06, 9.3823918194045423e-06, 8.8443610885795864e-06, 8.390741397436483e-06, 8.0794233749007352e-06, 7.314778209937296e-06, 6.8355067079599915e-06, 6.4920293993964151e-06, 5.8536596319364823e-06, 5.4588707842283053e-06, 5.340525973451804e-06, 4.7956051807724568e-06, 4.8703762912184952e-06, 4.8200346388479639e-06, 4.9040241236752991e-06, 4.9562294200151361e-06, 4.9532041482994571e-06, 5.2312098444774942e-06, 5.6630580088169931e-06, 5.9740307725470691e-06, 6.6191794425256897e-06, 7.0324996142647119e-06, 7.7547689524440747e-06, 8.5065387419750302e-06, 9.1322785595236515e-06, 9.6223051286870032e-06, 1.0039488764895005e-05, 1.0034276499482075e-05, 9.9855704596458451e-06, 9.868503842166579e-06, 1.0060489159968711e-05, 9.4430481608144741e-06, 9.6495033606710686e-06, 9.5633903072211979e-06, 9.5926660808994959e-06, 9.7405895555116976e-06, 9.7219782000073412e-06, 9.297255445517294e-06, 9.8650918159494607e-06, 9.8539922126812069e-06, 9.6571069678118097e-06, 9.7573489808512816e-06, 9.6340325350346178e-06, 9.6367551317858405e-06, 9.978000288616126e-06, 9.8149022197243787e-06, 9.546953297753394e-06, 9.4805770264169306e-06, 9.1786166974218626e-06, 9.1060865656800161e-06, 9.0175584140134941e-06, 8.6397437663825787e-06, 8.7637063432209404e-06, 8.8459673211868259e-06, 9.4269362063771818e-06, 1.0002229763423592e-05, 1.0406608217700913e-05, 1.0919947450409902e-05, 1.1358149444211968e-05, 1.1572783681198676e-05, 1.2196116423573195e-05, 1.2641516783722701e-05, 1.29129554287439e-05, 1.3358379711852259e-05, 1.3806785562207682e-05, 1.4387694769928722e-05, 1.498128636155473e-05, 1.5129399051667341e-05, 1.5012858852969657e-05, 1.531452705551471e-05, 1.5412923776888681e-05, 1.5704496572003075e-05, 1.5923647343437809e-05, 1.6049607584786179e-05, 1.6216765922243731e-05, 1.6509809077953313e-05, 1.6698102188326758e-05, 1.6780204402623766e-05, 1.6543390009766362e-05, 1.6500953084427496e-05, 1.6117827304437276e-05, 1.5824646587654051e-05, 1.5755197144547612e-05, 1.5469635354747879e-05, 1.544752927884474e-05
        };
        CorHierarchet ch = new CorHierarchet(d1,d2);
        ch.calStufeOne(5);
        List<ArrayList<Double>> st = ch.getStufeOne();
        System.out.println("Size of data is: "+ ch.getSizeOfData());
    
        try{
            FileWriter writer = new FileWriter("/Users/ihuangyiran/Documents/Workplace_Maven/CorrelationWindow/data/war2.data");
            for(double i=0.99; i>0.5 ; i-=0.01){
                System.out.println("###################################");
                System.out.println("#threshold is "+i);
                System.out.println("###################################");
                st = ch.calStufeNext(st, i);
                ch.showStufe(st);
                System.out.println("");
                System.out.println("----------------");
                System.out.println("**the longest window in this stufe is:**");
                ch.showItem(ch.getLongestWindowInStufe(st));
                
                //output
                ArrayList<Double> itemL = ch.getLongestWindowInStufe(st);
                double timeStemp = itemL.get(2) - itemL.get(1);
                double cor = itemL.get(0);
                writer.write(cor+","+timeStemp);
                writer.write("\n");
            }
            writer.close();
        }catch(Exception e){
            e.printStackTrace();
        }
        System.out.println("########################");
        System.out.println("#The best Item is:");
        System.out.println("########################");
        ch.showItem(ch.getBestCW());

    }
}
